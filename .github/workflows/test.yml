name: Test and Build
on: [push]

jobs:
  test:
    name: Test
    runs-on: ubuntu-20.04
    outputs:
      branch: ${{ steps.branchinfo.outputs.branch }}

    steps:
      - uses: nelonoel/branch-name@v1.0.1

      - name: Store the branch name
        id: branchinfo
        run: echo "::set-output name=branch::${BRANCH_NAME}"

      - uses: actions/checkout@v2

      - name: Install Dependencies
        uses: bahmutov/npm-install@HEAD

      - name: Unit Tests
        run: npm run test:ci

      - name: E2E Tests
        uses: cypress-io/github-action@v2
        with:
          start: npm start
          wait-on: 'http://localhost:3000'

  build:
    name: Build
    runs-on: ubuntu-20.04
    needs: test
    if: ${{ needs.test.outputs.branch == 'main' }}

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install Dependencies
        uses: bahmutov/npm-install@HEAD

      - name: Get Current Version
        id: currentVersion
        run: |
          version=`node -p "require('./package.json').version"`
          echo "::set-output name=value::${version}"

      - name: Get Next Version
        id: nextVersion
        run: |
          version=`npm run --silent release-version`
          echo "::set-output name=value::${version}"

      - run: echo "${{ steps.nextVersion.outputs.value }} ${{ steps.currentVersion.outputs.value }}"

      - name: Should We Release?
        id: shouldRelease
        run: |
          should=`[ "${{ steps.nextVersion.outputs.value }}" == "${{ steps.currentVersion.outputs.value }}" ] && echo "no" || echo "yes"`
          echo "::set-output name=value::${should}"

      - if: steps.shouldRelease.outputs.value == 'yes'
        run: echo "Yes build"

      - name: Build
        if: steps.shouldRelease.outputs.value == 'yes'
        run: |
          npm run build
          tar -C ./build -czvf ./release.tar.gz .

      - name: Do Release Changes
        if: steps.shouldRelease.outputs.value == 'yes'
        # NOTE: Currently runs `standard-version --prerelease`.
        #       Update the release script in package.json to change
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          npm run release

      - name: Commit Release
        if: steps.shouldRelease.outputs.value == 'yes'
        run: git push origin

      - name: Create Release
        id: createRelease
        uses: ncipollo/release-action@v1
        with:
          artifact: "release.tar.gz"
          tag: v${{ steps.nextVersion.outputs.value }}
          name: Release v${{ steps.nextVersion.outputs.value }}
          token: ${{ secrets.GITHUB_TOKEN }}

      # - name: Repository Dispatch
      #   uses: peter-evans/repository-dispatch@v1
      #   with:
      #     repository: brainchild-projects/brainchild-projects.github.io-src
      #     token: ${{ secrets.REPO_ACCESS_TOKEN }}
      #     event-type: sites-printables-update
