name: Test and Build
on: [push]

jobs:
  test:
    name: Test
    runs-on: ubuntu-20.04
    outputs:
      branch: ${{ steps.branchinfo.outputs.branch }}

    steps:
      - name: Store the branch name
        id: branchinfo
        run: echo "::set-output name=branch::${BRANCH_NAME}"

      - uses: actions/checkout@v2

      - name: Install Dependencies
        run: npm install

      - name: Unit Tests
        run: npm run test:ci

      - name: E2E Tests
        uses: cypress-io/github-action@v2
        with:
          start: npm start
          wait-on: 'http://localhost:3000'

  build:
    name: Build
    runs-on: ubuntu-20.04
    # needs: test
    if: ${{ needs.test.outputs.branch == 'main' }}

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Get Current Version
        id: currentVersion
        run: |
          version=`node -p "require('./package.json').version"`
          echo "::set-output name=value::${version}"

      - name: Get Next Version
        id: nextVersion
        run: |
          version=`npx standard-version --dry-run | sed -e '1!d' -e 's/.*to //g'`
          echo "::set-output name=value::${version}"

      - run: echo "${{ steps.nextVersion.outputs.value }} ${{ steps.currentVersion.outputs.value }}"

      - name: Should We Release?
        id: shouldRelease
        run: |
          should=`[ "${{ steps.nextVersion.outputs.value }}" == "${{ steps.currentVersion.outputs.value }}" ] && echo "no" || echo "yes"`
          echo "::set-output name=value::${should}"

      - if: steps.shouldRelease.outputs.value == 'yes'
        run: echo "Yes build"

      - name: Do Release Changes
        if: steps.shouldRelease.outputs.value == 'yes'
        # NOTE: Currently runs `standard-version --prerelease`.
        #       Update the release script in package.json to change
        run: npm run release

      - name: Commit Release
        if: steps.shouldRelease.outputs.value == 'yes'
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git push --folow-tags origin

      - name: Create Release
        if: steps.shouldRelease.outputs.value == 'yes'
        id: createRelease
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.nextVersion.outputs.value }}
          release_name: Release ${{ steps.nextVersion.outputs.value }}
          # body: |
          #   Changes in this Release

          #   ${{ steps.changelog.outputs.summary }}

          draft: false
          prerelease: true

      # - name: Repository Dispatch
      #   uses: peter-evans/repository-dispatch@v1
      #   with:
      #     repository: brainchild-projects/brainchild-projects.github.io-src
      #     token: ${{ secrets.REPO_ACCESS_TOKEN }}
      #     event-type: sites-printables-update
